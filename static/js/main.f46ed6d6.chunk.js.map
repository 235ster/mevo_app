{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["navControlStyle","right","top","App","useState","width","height","longitude","latitude","zoom","viewport","setViewport","cordinates","setCordinates","useEffect","fetch","then","response","json","result","vehicleCordinates","map","vehicle","position","console","log","length","className","mapboxApiAccessToken","onViewportChange","mapStyle","eachVehicle","Number","src","alt","style","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAKMA,EAAiB,CACrBC,MAAO,GACPC,IAAK,IAgDQC,MA7Cf,WACE,IADa,EAEmBC,mBAAS,CACvCC,MAAO,QACPC,OAAQ,QACRC,UAAW,WACXC,UAAW,SACXC,KAAK,KAPM,mBAENC,EAFM,KAEIC,EAFJ,OASsBP,mBAAS,IAT/B,mBASNQ,EATM,KASMC,EATN,KAWbC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAG,GAAM,OAAIN,EAAcM,QAC9B,IAEH,IAAMC,EAAkBR,EAAWS,KAAI,SAAAC,GAAO,OAAIA,EAAQC,YAG1D,OAFAC,QAAQC,IAAI,4CAA6CL,GAEhDA,EAAkBM,OACzB,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,2BAAgBjB,GAAhB,IACAkB,qBAtBmB,4FAuBnBC,iBAAkB,SAAAnB,GAChBC,EAAYD,IAEdoB,SAAU,kCALV,UAOCV,EAAkBC,KAAI,SAAAU,GACrB,OACE,cAAC,IAAD,CAA4CxB,UAAWyB,OAAOD,EAAYxB,WAAYC,SAAUwB,OAAOD,EAAYvB,UAAnH,SACE,wBAAQmB,UAAU,aAAlB,SACE,qBAAKM,IAAI,+DAA+DC,IAAI,0BAKpF,cAAC,IAAD,CAAmBC,MAAOnC,UAG5B,gDCvCWoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f46ed6d6.chunk.js","sourcesContent":["import './App.css';\r\nimport ReactMapGL, {Marker, NavigationControl} from 'react-map-gl';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst navControlStyle= {\r\n  right: 10,\r\n  top: 10\r\n};\r\n\r\nfunction App() {\r\n  const MAPBOX_API_TOKEN='pk.eyJ1IjoiMjM1c3RlciIsImEiOiJja2tpNGVkdHgwbXVqMzFvZGthNzFlNzRmIn0.87buL0bck5pMP-WJbWGSeQ';\r\n  const [viewport, setViewport] = useState({\r\n    width: '100vw',\r\n    height: '100vh',\r\n    longitude: 174.763401,\r\n    latitude: -41.29391,\r\n    zoom:12\r\n  });\r\n  const [cordinates, setCordinates]= useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.mevo.co.nz/public/vehicles/all')\r\n    .then(response => response.json())\r\n    .then (result => setCordinates(result));\r\n  }, [])\r\n\r\n  const vehicleCordinates=cordinates.map(vehicle => vehicle.position);\r\n  console.log(\"Vehicle cordinates retrieved from API are\", vehicleCordinates);  \r\n\r\n  return ( vehicleCordinates.length ?\r\n    <div className=\"App\">\r\n      <ReactMapGL {...viewport} \r\n      mapboxApiAccessToken={MAPBOX_API_TOKEN} \r\n      onViewportChange={viewport => {\r\n        setViewport(viewport)\r\n      }}\r\n      mapStyle={'mapbox://styles/mapbox/basic-v9'}\r\n      > \r\n      {vehicleCordinates.map(eachVehicle => {\r\n        return (\r\n          <Marker /* key={park.properties.PARK_ID} */ longitude={Number(eachVehicle.longitude)} latitude={Number(eachVehicle.latitude)}>\r\n            <button className=\"btn-marker\">\r\n              <img src=\"https://assets.mevo.co.nz/vehicles/pin-vehicle-available.png\" alt=\"Vehicle marker\"/>\r\n            </button>\r\n          </Marker>\r\n          )\r\n      })}\r\n      <NavigationControl style={navControlStyle} />\r\n      </ReactMapGL>    \r\n    </div> :\r\n    <div> Loading....</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}